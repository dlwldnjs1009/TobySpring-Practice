<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         https://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/util
         https://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/aop
         https://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
         https://www.springframework.org/schema/tx/spring-tx.xsd
       ">

  <!-- 데이터 소스 설정 -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
    <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/tobiSpring"/>
    <property name="username" value="root"/>
    <property name="password" value="3690"/>
  </bean>

  <!-- JdbcTemplate 빈 설정 (생성자 주입 방식) -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- UserDao 빈 설정 (생성자 주입) -->
  <bean id="userDao" class="com.example.TobySpring.user.dao.UserDaoJdbc">
    <constructor-arg ref="jdbcTemplate"/>
    <property name="sqlService" ref="sqlService">
    </property>
  </bean>

  <bean id="sqlService" class="com.example.TobySpring.user.sqlservice.SimpleSqlService">
    <property name="sqlMap" >
      <map>
        <entry key="userAdd" value="insert into users(id, email, name, password, level, login, recommend) values(?,?,?,?,?,?,?)"/>
        <entry key="userUpdate" value="update users set email = ?, name = ?, password = ?, level = ?, login = ?, recommend = ? where id = ?"/>
        <entry key="userGet" value="select * from users where id = ?"/>
        <entry key="userGetAll" value="select * from users order by id"/>
        <entry key="userDeleteAll" value="delete from users"/>
        <entry key="userGetCount" value="select count(*) from users"/>
      </map>
    </property>
  </bean>


  <!-- 트랜잭션 매니저 설정 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- UserService 빈 설정 -->
  <bean id="userService" class="com.example.TobySpring.user.service.UserServiceImpl">
    <property name="userDao" ref="userDao"/>
  </bean>

<!--  &lt;!&ndash; TestUserServiceImpl 빈 설정 &ndash;&gt;-->
<!--  <bean id="testUserService"-->
<!--    class="com.example.TobySpring.user.service.UserServiceTest$TestUserServiceImpl"-->
<!--    parent="userService">-->
<!--    <constructor-arg value="madnite1"/>-->
<!--  </bean>-->

  <!-- AOP 설정 -->
  <aop:config>
    <aop:pointcut id="transactionPointcut" expression="bean(*Service)" />
    <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>
  </aop:config>

  <!-- 트랜잭션 어드바이스 설정 -->
  <tx:advice id="transactionAdvice">
    <tx:attributes>
      <tx:method name="get*" read-only="true"/>
      <tx:method name="*" propagation="REQUIRED"/>
    </tx:attributes>
  </tx:advice>

  <!-- 프록시 생성기 설정 -->
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
</beans>
